# coding: utf-8
require 'frazzle/frazzle'
require 'colorize'
require 'git'

registry = Frazzle::Registry.new('gerrithooks', '_', '_')

class RefUpdateHook
  attr_accessor :projects
  attr_accessor :name

  def initialize(name)
    @projects = :all
    @name = name
  end

  def run(args, io)
    raise "please implement run in #{self}"
  end

  def responsible_for(project)
    return true if @projects == :all
    return @project.include?(project)
  end

  def to_s
    "plugin: #{name} for #{projects_to_string}"
  end

  def project_to_string
    projects == :all ? 'ALL' : projects.join(', ')
  end
end

plugins = registry.get_plugins('refupdate').map do |plugin|
  res = RefUpdateHook.new(plugin)
  registry.load_plugin(plugin, res)
  res
end

class String
  def indent(spaces)
    split("\n").map{|i|"#{' ' * spaces}#{i}"}.join("\n")
  end
end

args = Hash[*ARGV]
project = args['--project']
plugins.each do |plugin|
  io = StringIO.new
  begin
    if plugin.responsible_for(project)
      plugin.run(args, io)
      puts "âœ” #{plugin.name}".green
      puts io.string.indent(2)
    end
  rescue => error
    puts "âœ˜ #{plugin.name}".red
    puts io.string.indent(2)
    puts error
    raise error
  end
end

